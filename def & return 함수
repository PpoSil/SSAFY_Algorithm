# return문의 역할값
# 값 돌려주기
# 함수 즉시 종료하기

def square(x):
    print('함수 시작') # 실행
    return x*x # 값 돌려줌과 동시에 함수 즉시 종료
    print('함수 끝') # 앞에서 함수가 종료되었기에 출력되지 x
  
print(square(3)) # 9
print('hello python') # hello python

# return문의 print와 return 차이
def print_square(x):
    print( x * x ) # 15번째 줄 자체는 9가 출력 / but 값을 returen하지 않음 so 20번줄에서는 값이 없으므로 None 출력
    
def get_square(x):
    return x * x # 값 자체가 9 but 출력을 실행하진 않음 출력하고 싶으면 21번줄처럼 print(get_sqaure(3))을 해줘야 값이 출력됨.

print(print_square(3)) # None
get_square(3) # print를 하지 못 함 so 아무것도 출력 x
print(get_square(3)) # 9

# def문
# 파라미터에게 기본값을 설정해줄 수 있는데 기본값을 설정해두면 함수를 호출할 때 꼭 파라미터에 값을 안 넘겨줘도 됨!
# => 이를 '옵셔널 파라미터'라고 함
# but 옵셔널 파라미터는 모두 마지막에 존재하여야 함!
# 다른 값들 사이에 있으면 오류발생
def myself(name, nationality='한국', age):
    print(f'내 이름은{name}')
    print(f'내 나이는{age}살')
    print(f'국적은 {nationality}')
    
myself('코드잇', 1) # 기본값이 한국이므로 '내 이름은 코드잇 /n 내 나이는 1살 /n 국적은 한국'으로 출력
myself('코드잇', 1, '미국') # 옵셔널 파라미터의 값이 미국으로 바뀌었으므로 '내 이름은 코드잇 /n 내 나이는 1살 /n 국적은 '으로 출력
# def문 안에 여러 변수값이 저장되어있다면
# ex)
def name():
    x = 'solbi'
    x = 'eunsol'
    print(x) # 가장 최근 값인 eunsol이 저장되어있음!
