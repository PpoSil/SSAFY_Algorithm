# 재귀함수 = def _(): /n return ~~

# 삼항연산자 -> (True) if 조건문 (Else)

# 리스트 컴프리헨션 -> like 삼항연산자! 
# 변수 + 조건문(for문 여러개 가능-> 여러개일 때 왼쪽부터!) + if는 뒤에 가능

# 리스트를 생성하는 다양한 방법
# 1. a = list(range(1,6))
# 2. a = [1, 2, 3, 4, 5]
# 3. a = [0] * 5
# 4. a.extend((1,2,3,4,5))
# 5. a = []
# 6. [a.append(i) for i in range

# 리스트 컴프리헨션 -> [변수 조건문 if] -> [a.append(i) for i in range(1,60)]

# 일반 반복문에서 사용*할 수 없는* 제어문
# break
# continue
# pass

# 문자열 enumerate 순회, 다중 if문 조건(다소 난해) ?????
# a = 'abcdefg'
# for idx, value in enumerate(a):
#     if value and idx < 4:
#         print(value, idx)

# Truthy / Falsy
# 참으로 취급 되는 값(Truthy), 거짓으로 취급되는 값(Falsy)라는 용어
# <Falsy> 이 외 모두 Truthy
# False
# None (=0) <-> 1 = True
# 0, 0.0, 0L, 0j
# "" 빈 문자
# [] 빈 리스트
# () 빈 튜플
# {} 빈 딕셔너리

# 이스케이프 시퀀스(시퀀스란? 순서가 있는!)
# \\ # 백슬래시, \
# \n # 새 줄, 개행 문자, ASCII Linefeed, LF
# \r # 캐리지 리턴, ASCII Carriage Return, CR
# \t # 탭 문자, ASCII Horizontal Tab, TAB
# \o # null

# 튜플 생성하는 다양한 방법
# a = 1,2,3,4
# a = (1, 2, 3, 4) 
# if 한 개의 요소만 넣으려면? -> a = (1,) : 마지막에 반드시 , 붙여줘야 함 그래야 튜플인 지 앎!
# a = tuple(1,2,3,4)
# a = ()

# 연산자 우선순위
# https://dojang.io/mod/page/view.php?id=2461 링크 참고

# Class: staticmathod vs classmethod
# <staticmethod> 부모, 자식 클래스 어디에서 선언하든 클래스 변수를 모두 바꿈
# <classmethod> 부모 클래스 객체에서 선언해야만 자식 클래스의 클래스 변수까지 변경 가능
# -> 자식 클래스 객체에서 선언하게 된다면 부모 클래스의 클래스 변수는 그대로
# -> 자식 클래스의 클래스 변수만 바뀜
